
package silkycoms;

enum Status {
    COMPLETE = 1;
    IN_PROGRESS = 2;
    FAILED = 3;
}

message Error {
    optional string message = 1;
    optional int32 code = 2;
}

message ComsMessage {
    optional int32 id = 1;
    optional string instanceId = 2;
    optional bytes payload = 3;
    optional string payloadType = 4;
    optional Status status = 5 [default = COMPLETE];
    optional Error error = 6;
}

message InstanceRequest {
}

message InstanceResponse {
}

message OpenRequest {
    optional string filename = 1;
}

message OpenProgress {
}

message SaveRequest {
    optional string filename = 1;
}

message SaveProgress {
}

message FSEntry {
    optional string path = 1;

    enum Type {
        FILE = 1;
        FOLDER = 2;
    }

    optional Type type = 2;
}

message FSRequest {
    optional string path = 1;
}

message FSResponse {
    repeated FSEntry contents = 1;
    optional string errorMessage = 2;
}

message DataSetEntry {
    optional string name = 1;
    optional string path = 2;
    optional string location = 3;
}

message SettingsRequest {
}

message SettingsResponse {
    repeated DataSetEntry recents = 1;
    repeated DataSetEntry localFSRecents = 2;
}

message InfoRequest {
}

message InfoResponse {

    message Schema {
        message Field {
            optional string name = 1;

            enum MeasureType {
                MISC = 0;
                NOMINAL_TEXT = 1;
                NOMINAL = 2;
                ORDINAL = 3;
                CONTINUOUS = 4;
            }

            optional MeasureType measureType = 2;
            optional int32 width = 3;
        }
        repeated Field fields = 1;
    }

    optional bool hasDataSet = 1;
    optional Schema schema = 2;
    optional uint32 rowCount = 3;
    optional uint32 columnCount = 4;
    optional string filePath = 5;
}

message CellsRequest {
    optional uint32 rowStart = 1;
    optional uint32 columnStart = 2;
    optional uint32 rowEnd = 3;
    optional uint32 columnEnd = 4;
}

message CellsResponse {

    optional CellsRequest request = 1;

    message Column {

        message Ints {
            repeated int32 values = 1;
        }
        message Doubles {
            repeated double values = 1;
        }
        message Strings {
            repeated string values = 1;
        }

        oneof cells {
            Ints    ints = 1;
            Doubles doubles = 2;
            Strings strings = 3;
        }
    }

    repeated Column columns = 2;
}

message AnalysisRequest {
    optional string datasetId = 1;
    optional int32 analysisId = 2;
    optional string name = 3;
    optional string ns = 4;

    enum Perform {
        INIT = 1;
        RUN = 2;
    }

    optional Perform perform = 5;
    optional string options = 6;
    optional int32 ppi = 7 [default=72];
}

enum AnalysisStatus {
    ANALYSIS_NONE = 0;
    ANALYSIS_INITED = 1;
    ANALYSIS_RUNNING = 2;
    ANALYSIS_COMPLETE = 3;
    ANALYSIS_ERROR = 4;
    ANALYSIS_ABORTED = 5;
}

message AnalysisResponse {

    optional string datasetId = 1;
    optional int32 analysisId = 2;
    optional string options = 3;
    optional ResultsElement results = 4;
    optional AnalysisStatus status = 5;
    optional Error error = 6;
    optional bool incAsText = 7;
}

message ResultsCell {

    enum Other {
        MISSING = 1;
        NOT_A_NUMBER = 2;
    }

    oneof cellType {
        int32  i = 1;
        double d = 2;
        string s = 3;
        Other  o = 4;
    }

    optional int32 format = 5; // bit field

    // 1 = begin group
    // 2 = end group
    // 4 = negative (red highlight)

    repeated string footnotes = 6;
}

message ResultsColumn {

    optional string name = 1;
    optional string title = 2;
    optional string type = 3;
    optional string format = 4;

    repeated ResultsCell cells = 7;
}

message ResultsTableNote {
    optional string name = 1;
    optional string note = 2;
}

message ResultsTable {
    repeated ResultsColumn columns = 1;
    repeated string rowNames = 2;
    optional bool swapRowsColumns = 3;
    repeated ResultsTableNote notes = 4;
    optional string asText = 5;
}

message ResultsImage {
    optional string path = 1;
    optional int32 width = 2;
    optional int32 height = 3;
}

message ResultsArray {
    repeated ResultsElement elements = 1;
}

message ResultsGroup {
    repeated ResultsElement elements = 1;
}

message ResultsElement {
    optional string name = 1;
    optional string title = 2;
    optional AnalysisStatus status = 3 [default=ANALYSIS_RUNNING];
    optional Error error = 4;

    oneof type {
        ResultsTable table = 6;
        ResultsImage image = 7;
        ResultsGroup group = 8;
        ResultsArray array = 9;
        string syntax = 11;
    }
}
